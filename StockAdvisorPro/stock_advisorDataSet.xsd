<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="stock_advisorDataSet" targetNamespace="http://tempuri.org/stock_advisorDataSet.xsd" xmlns:mstns="http://tempuri.org/stock_advisorDataSet.xsd" xmlns="http://tempuri.org/stock_advisorDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Setting" IsAppSettingsProperty="true" Modifier="Assembly" Name="Setting (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.StockAdvisorPro.Properties.Settings.GlobalReference.Default.Setting" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ARTICLETableAdapter" GeneratorDataComponentClassName="ARTICLETableAdapter" Name="ARTICLE" UserDataComponentName="ARTICLETableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="stock_advisor.dbo.ARTICLE" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ARTICLE] WHERE (([id] = @Original_id) AND ([Article_date] = @Original_Article_date) AND ([Reviewed] = @Original_Reviewed))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Article_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Article_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Reviewed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Reviewed" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ARTICLE] ([Article_text], [Article_date], [Reviewed]) VALUES (@Article_text, @Article_date, @Reviewed);
SELECT id, Article_text, Article_date, Reviewed FROM ARTICLE WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Article_text" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Article_text" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Article_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Article_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Reviewed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Reviewed" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Article_text, Article_date, Reviewed FROM ARTICLE</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ARTICLE] SET [Article_text] = @Article_text, [Article_date] = @Article_date, [Reviewed] = @Reviewed WHERE (([id] = @Original_id) AND ([Article_date] = @Original_Article_date) AND ([Reviewed] = @Original_Reviewed));
SELECT id, Article_text, Article_date, Reviewed FROM ARTICLE WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Article_text" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Article_text" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Article_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Article_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Reviewed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Reviewed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Article_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Article_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Reviewed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Reviewed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="stock_advisor.dbo.ARTICLE" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Article_text" DataSetColumn="Article_text" />
              <Mapping SourceColumn="Article_date" DataSetColumn="Article_date" />
              <Mapping SourceColumn="Reviewed" DataSetColumn="Reviewed" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DICTIONARYTableAdapter" GeneratorDataComponentClassName="DICTIONARYTableAdapter" Name="DICTIONARY" UserDataComponentName="DICTIONARYTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="stock_advisor.dbo.DICTIONARY" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DICTIONARY] WHERE (([id] = @Original_id) AND ([User_id] = @Original_User_id) AND ([Word] = @Original_Word) AND ([Weight] = @Original_Weight))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Word" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Weight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DICTIONARY] ([id], [User_id], [Word], [Weight]) VALUES (@id, @User_id, @Word, @Weight);
SELECT id, User_id, Word, Weight FROM DICTIONARY WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Word" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Weight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, User_id, Word, Weight FROM dbo.DICTIONARY</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DICTIONARY] SET [id] = @id, [User_id] = @User_id, [Word] = @Word, [Weight] = @Weight WHERE (([id] = @Original_id) AND ([User_id] = @Original_User_id) AND ([Word] = @Original_Word) AND ([Weight] = @Original_Weight));
SELECT id, User_id, Word, Weight FROM DICTIONARY WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Word" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Weight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Word" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Weight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="User_id" DataSetColumn="User_id" />
              <Mapping SourceColumn="Word" DataSetColumn="Word" />
              <Mapping SourceColumn="Weight" DataSetColumn="Weight" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="REVIEWTableAdapter" GeneratorDataComponentClassName="REVIEWTableAdapter" Name="REVIEW" UserDataComponentName="REVIEWTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="stock_advisor.dbo.REVIEW" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[REVIEW] WHERE (([User_id] = @Original_User_id) AND ([Stock_id] = @Original_Stock_id) AND ([Article_id] = @Original_Article_id) AND ([Score] = @Original_Score))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Article_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Article_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[REVIEW] ([User_id], [Stock_id], [Article_id], [Score]) VALUES (@User_id, @Stock_id, @Article_id, @Score);
SELECT User_id, Stock_id, Article_id, Score FROM REVIEW WHERE (Article_id = @Article_id) AND (Stock_id = @Stock_id) AND (User_id = @User_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Article_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Article_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT User_id, Stock_id, Article_id, Score FROM dbo.REVIEW</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[REVIEW] SET [User_id] = @User_id, [Stock_id] = @Stock_id, [Article_id] = @Article_id, [Score] = @Score WHERE (([User_id] = @Original_User_id) AND ([Stock_id] = @Original_Stock_id) AND ([Article_id] = @Original_Article_id) AND ([Score] = @Original_Score));
SELECT User_id, Stock_id, Article_id, Score FROM REVIEW WHERE (Article_id = @Article_id) AND (Stock_id = @Stock_id) AND (User_id = @User_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Article_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Article_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Article_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Article_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="User_id" DataSetColumn="User_id" />
              <Mapping SourceColumn="Stock_id" DataSetColumn="Stock_id" />
              <Mapping SourceColumn="Article_id" DataSetColumn="Article_id" />
              <Mapping SourceColumn="Score" DataSetColumn="Score" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SAVED_STOCKTableAdapter" GeneratorDataComponentClassName="SAVED_STOCKTableAdapter" Name="SAVED_STOCK" UserDataComponentName="SAVED_STOCKTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="stock_advisor.dbo.SAVED_STOCK" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SAVED_STOCK] WHERE (([User_id] = @Original_User_id) AND ([Stock_id] = @Original_Stock_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SAVED_STOCK] ([User_id], [Stock_id]) VALUES (@User_id, @Stock_id);
SELECT User_id, Stock_id FROM SAVED_STOCK WHERE (Stock_id = @Stock_id) AND (User_id = @User_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT User_id, Stock_id FROM dbo.SAVED_STOCK</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SAVED_STOCK] SET [User_id] = @User_id, [Stock_id] = @Stock_id WHERE (([User_id] = @Original_User_id) AND ([Stock_id] = @Original_Stock_id));
SELECT User_id, Stock_id FROM SAVED_STOCK WHERE (Stock_id = @Stock_id) AND (User_id = @User_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="User_id" DataSetColumn="User_id" />
              <Mapping SourceColumn="Stock_id" DataSetColumn="Stock_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="STOCKTableAdapter" GeneratorDataComponentClassName="STOCKTableAdapter" Name="STOCK" UserDataComponentName="STOCKTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="stock_advisor.dbo.STOCK" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[STOCK] WHERE (([id] = @Original_id) AND ([Symbol] = @Original_Symbol))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Symbol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Symbol" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[STOCK] ([id], [Symbol]) VALUES (@id, @Symbol);
SELECT id, Symbol FROM STOCK WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Symbol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Symbol" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Symbol FROM dbo.STOCK</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[STOCK] SET [id] = @id, [Symbol] = @Symbol WHERE (([id] = @Original_id) AND ([Symbol] = @Original_Symbol));
SELECT id, Symbol FROM STOCK WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Symbol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Symbol" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Symbol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Symbol" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Symbol" DataSetColumn="Symbol" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="STOCK_PRICETableAdapter" GeneratorDataComponentClassName="STOCK_PRICETableAdapter" Name="STOCK_PRICE" UserDataComponentName="STOCK_PRICETableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="stock_advisor.dbo.STOCK_PRICE" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[STOCK_PRICE] WHERE (([id] = @Original_id) AND ([Stock_id] = @Original_Stock_id) AND ([Price] = @Original_Price) AND ([Date] = @Original_Date))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[STOCK_PRICE] ([id], [Stock_id], [Price], [Date]) VALUES (@id, @Stock_id, @Price, @Date);
SELECT id, Stock_id, Price, Date FROM STOCK_PRICE WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Stock_id, Price, Date FROM dbo.STOCK_PRICE</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[STOCK_PRICE] SET [id] = @id, [Stock_id] = @Stock_id, [Price] = @Price, [Date] = @Date WHERE (([id] = @Original_id) AND ([Stock_id] = @Original_Stock_id) AND ([Price] = @Original_Price) AND ([Date] = @Original_Date));
SELECT id, Stock_id, Price, Date FROM STOCK_PRICE WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Stock_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Stock_id" DataSetColumn="Stock_id" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="USERTableAdapter" GeneratorDataComponentClassName="USERTableAdapter" Name="USER" UserDataComponentName="USERTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="stock_advisor.dbo.[USER]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[USER] WHERE (([id] = @Original_id) AND ([Username] = @Original_Username) AND ([Password] = @Original_Password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[USER] ([id], [Username], [Password]) VALUES (@id, @Username, @Password);
SELECT id, Username, Password FROM [USER] WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Username, Password FROM dbo.[USER]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[USER] SET [id] = @id, [Username] = @Username, [Password] = @Password WHERE (([id] = @Original_id) AND ([Username] = @Original_Username) AND ([Password] = @Original_Password));
SELECT id, Username, Password FROM [USER] WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="stock_advisorDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="stock_advisorDataSet" msprop:Generator_UserDSName="stock_advisorDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ARTICLE" msprop:Generator_TableClassName="ARTICLEDataTable" msprop:Generator_TableVarName="tableARTICLE" msprop:Generator_TablePropName="ARTICLE" msprop:Generator_RowDeletingName="ARTICLERowDeleting" msprop:Generator_RowChangingName="ARTICLERowChanging" msprop:Generator_RowEvHandlerName="ARTICLERowChangeEventHandler" msprop:Generator_RowDeletedName="ARTICLERowDeleted" msprop:Generator_UserTableName="ARTICLE" msprop:Generator_RowChangedName="ARTICLERowChanged" msprop:Generator_RowEvArgName="ARTICLERowChangeEvent" msprop:Generator_RowClassName="ARTICLERow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Article_text" msprop:Generator_ColumnVarNameInTable="columnArticle_text" msprop:Generator_ColumnPropNameInRow="Article_text" msprop:Generator_ColumnPropNameInTable="Article_textColumn" msprop:Generator_UserColumnName="Article_text">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Article_date" msprop:Generator_ColumnVarNameInTable="columnArticle_date" msprop:Generator_ColumnPropNameInRow="Article_date" msprop:Generator_ColumnPropNameInTable="Article_dateColumn" msprop:Generator_UserColumnName="Article_date" type="xs:dateTime" />
              <xs:element name="Reviewed" msprop:Generator_ColumnVarNameInTable="columnReviewed" msprop:Generator_ColumnPropNameInRow="Reviewed" msprop:Generator_ColumnPropNameInTable="ReviewedColumn" msprop:Generator_UserColumnName="Reviewed" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DICTIONARY" msprop:Generator_TableClassName="DICTIONARYDataTable" msprop:Generator_TableVarName="tableDICTIONARY" msprop:Generator_TablePropName="DICTIONARY" msprop:Generator_RowDeletingName="DICTIONARYRowDeleting" msprop:Generator_RowChangingName="DICTIONARYRowChanging" msprop:Generator_RowEvHandlerName="DICTIONARYRowChangeEventHandler" msprop:Generator_RowDeletedName="DICTIONARYRowDeleted" msprop:Generator_UserTableName="DICTIONARY" msprop:Generator_RowChangedName="DICTIONARYRowChanged" msprop:Generator_RowEvArgName="DICTIONARYRowChangeEvent" msprop:Generator_RowClassName="DICTIONARYRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="User_id" msprop:Generator_ColumnVarNameInTable="columnUser_id" msprop:Generator_ColumnPropNameInRow="User_id" msprop:Generator_ColumnPropNameInTable="User_idColumn" msprop:Generator_UserColumnName="User_id" type="xs:int" />
              <xs:element name="Word" msprop:Generator_ColumnVarNameInTable="columnWord" msprop:Generator_ColumnPropNameInRow="Word" msprop:Generator_ColumnPropNameInTable="WordColumn" msprop:Generator_UserColumnName="Word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Weight" msprop:Generator_ColumnVarNameInTable="columnWeight" msprop:Generator_ColumnPropNameInRow="Weight" msprop:Generator_ColumnPropNameInTable="WeightColumn" msprop:Generator_UserColumnName="Weight" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="REVIEW" msprop:Generator_TableClassName="REVIEWDataTable" msprop:Generator_TableVarName="tableREVIEW" msprop:Generator_TablePropName="REVIEW" msprop:Generator_RowDeletingName="REVIEWRowDeleting" msprop:Generator_RowChangingName="REVIEWRowChanging" msprop:Generator_RowEvHandlerName="REVIEWRowChangeEventHandler" msprop:Generator_RowDeletedName="REVIEWRowDeleted" msprop:Generator_UserTableName="REVIEW" msprop:Generator_RowChangedName="REVIEWRowChanged" msprop:Generator_RowEvArgName="REVIEWRowChangeEvent" msprop:Generator_RowClassName="REVIEWRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="User_id" msprop:Generator_ColumnVarNameInTable="columnUser_id" msprop:Generator_ColumnPropNameInRow="User_id" msprop:Generator_ColumnPropNameInTable="User_idColumn" msprop:Generator_UserColumnName="User_id" type="xs:int" />
              <xs:element name="Stock_id" msprop:Generator_ColumnVarNameInTable="columnStock_id" msprop:Generator_ColumnPropNameInRow="Stock_id" msprop:Generator_ColumnPropNameInTable="Stock_idColumn" msprop:Generator_UserColumnName="Stock_id" type="xs:int" />
              <xs:element name="Article_id" msprop:Generator_ColumnVarNameInTable="columnArticle_id" msprop:Generator_ColumnPropNameInRow="Article_id" msprop:Generator_ColumnPropNameInTable="Article_idColumn" msprop:Generator_UserColumnName="Article_id" type="xs:int" />
              <xs:element name="Score" msprop:Generator_ColumnVarNameInTable="columnScore" msprop:Generator_ColumnPropNameInRow="Score" msprop:Generator_ColumnPropNameInTable="ScoreColumn" msprop:Generator_UserColumnName="Score" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SAVED_STOCK" msprop:Generator_TableClassName="SAVED_STOCKDataTable" msprop:Generator_TableVarName="tableSAVED_STOCK" msprop:Generator_TablePropName="SAVED_STOCK" msprop:Generator_RowDeletingName="SAVED_STOCKRowDeleting" msprop:Generator_RowChangingName="SAVED_STOCKRowChanging" msprop:Generator_RowEvHandlerName="SAVED_STOCKRowChangeEventHandler" msprop:Generator_RowDeletedName="SAVED_STOCKRowDeleted" msprop:Generator_UserTableName="SAVED_STOCK" msprop:Generator_RowChangedName="SAVED_STOCKRowChanged" msprop:Generator_RowEvArgName="SAVED_STOCKRowChangeEvent" msprop:Generator_RowClassName="SAVED_STOCKRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="User_id" msprop:Generator_ColumnVarNameInTable="columnUser_id" msprop:Generator_ColumnPropNameInRow="User_id" msprop:Generator_ColumnPropNameInTable="User_idColumn" msprop:Generator_UserColumnName="User_id" type="xs:int" />
              <xs:element name="Stock_id" msprop:Generator_ColumnVarNameInTable="columnStock_id" msprop:Generator_ColumnPropNameInRow="Stock_id" msprop:Generator_ColumnPropNameInTable="Stock_idColumn" msprop:Generator_UserColumnName="Stock_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="STOCK" msprop:Generator_TableClassName="STOCKDataTable" msprop:Generator_TableVarName="tableSTOCK" msprop:Generator_TablePropName="STOCK" msprop:Generator_RowDeletingName="STOCKRowDeleting" msprop:Generator_RowChangingName="STOCKRowChanging" msprop:Generator_RowEvHandlerName="STOCKRowChangeEventHandler" msprop:Generator_RowDeletedName="STOCKRowDeleted" msprop:Generator_UserTableName="STOCK" msprop:Generator_RowChangedName="STOCKRowChanged" msprop:Generator_RowEvArgName="STOCKRowChangeEvent" msprop:Generator_RowClassName="STOCKRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Symbol" msprop:Generator_ColumnVarNameInTable="columnSymbol" msprop:Generator_ColumnPropNameInRow="Symbol" msprop:Generator_ColumnPropNameInTable="SymbolColumn" msprop:Generator_UserColumnName="Symbol">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="STOCK_PRICE" msprop:Generator_TableClassName="STOCK_PRICEDataTable" msprop:Generator_TableVarName="tableSTOCK_PRICE" msprop:Generator_TablePropName="STOCK_PRICE" msprop:Generator_RowDeletingName="STOCK_PRICERowDeleting" msprop:Generator_RowChangingName="STOCK_PRICERowChanging" msprop:Generator_RowEvHandlerName="STOCK_PRICERowChangeEventHandler" msprop:Generator_RowDeletedName="STOCK_PRICERowDeleted" msprop:Generator_UserTableName="STOCK_PRICE" msprop:Generator_RowChangedName="STOCK_PRICERowChanged" msprop:Generator_RowEvArgName="STOCK_PRICERowChangeEvent" msprop:Generator_RowClassName="STOCK_PRICERow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Stock_id" msprop:Generator_ColumnVarNameInTable="columnStock_id" msprop:Generator_ColumnPropNameInRow="Stock_id" msprop:Generator_ColumnPropNameInTable="Stock_idColumn" msprop:Generator_UserColumnName="Stock_id" type="xs:int" />
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" />
              <xs:element name="Date" msprop:Generator_ColumnVarNameInTable="columnDate" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_UserColumnName="Date" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="USER" msprop:Generator_TableClassName="USERDataTable" msprop:Generator_TableVarName="tableUSER" msprop:Generator_TablePropName="USER" msprop:Generator_RowDeletingName="USERRowDeleting" msprop:Generator_RowChangingName="USERRowChanging" msprop:Generator_RowEvHandlerName="USERRowChangeEventHandler" msprop:Generator_RowDeletedName="USERRowDeleted" msprop:Generator_UserTableName="USER" msprop:Generator_RowChangedName="USERRowChanged" msprop:Generator_RowEvArgName="USERRowChangeEvent" msprop:Generator_RowClassName="USERRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ARTICLE" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="DICTIONARY_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DICTIONARY" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="REVIEW_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:REVIEW" />
      <xs:field xpath="mstns:User_id" />
      <xs:field xpath="mstns:Stock_id" />
      <xs:field xpath="mstns:Article_id" />
    </xs:unique>
    <xs:unique name="SAVED_STOCK_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SAVED_STOCK" />
      <xs:field xpath="mstns:User_id" />
      <xs:field xpath="mstns:Stock_id" />
    </xs:unique>
    <xs:unique name="STOCK_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:STOCK" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="STOCK_PRICE_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:STOCK_PRICE" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="USER_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:USER" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_DICTIONARY_USER" msdata:parent="USER" msdata:child="DICTIONARY" msdata:parentkey="id" msdata:childkey="User_id" msprop:Generator_UserChildTable="DICTIONARY" msprop:Generator_ChildPropName="GetDICTIONARYRows" msprop:Generator_UserRelationName="FK_DICTIONARY_USER" msprop:Generator_RelationVarName="relationFK_DICTIONARY_USER" msprop:Generator_UserParentTable="USER" msprop:Generator_ParentPropName="USERRow" />
      <msdata:Relationship name="FK_REVIEW_ARTICLE" msdata:parent="ARTICLE" msdata:child="REVIEW" msdata:parentkey="id" msdata:childkey="Article_id" msprop:Generator_UserChildTable="REVIEW" msprop:Generator_ChildPropName="GetREVIEWRows" msprop:Generator_UserRelationName="FK_REVIEW_ARTICLE" msprop:Generator_ParentPropName="ARTICLERow" msprop:Generator_RelationVarName="relationFK_REVIEW_ARTICLE" msprop:Generator_UserParentTable="ARTICLE" />
      <msdata:Relationship name="FK_REVIEW_STOCK" msdata:parent="STOCK" msdata:child="REVIEW" msdata:parentkey="id" msdata:childkey="Stock_id" msprop:Generator_UserChildTable="REVIEW" msprop:Generator_ChildPropName="GetREVIEWRows" msprop:Generator_UserRelationName="FK_REVIEW_STOCK" msprop:Generator_RelationVarName="relationFK_REVIEW_STOCK" msprop:Generator_UserParentTable="STOCK" msprop:Generator_ParentPropName="STOCKRow" />
      <msdata:Relationship name="FK_REVIEW_USER" msdata:parent="USER" msdata:child="REVIEW" msdata:parentkey="id" msdata:childkey="User_id" msprop:Generator_UserChildTable="REVIEW" msprop:Generator_ChildPropName="GetREVIEWRows" msprop:Generator_UserRelationName="FK_REVIEW_USER" msprop:Generator_RelationVarName="relationFK_REVIEW_USER" msprop:Generator_UserParentTable="USER" msprop:Generator_ParentPropName="USERRow" />
      <msdata:Relationship name="FK_SAVED_STOCK_STOCK" msdata:parent="STOCK" msdata:child="SAVED_STOCK" msdata:parentkey="id" msdata:childkey="Stock_id" msprop:Generator_UserChildTable="SAVED_STOCK" msprop:Generator_ChildPropName="GetSAVED_STOCKRows" msprop:Generator_UserRelationName="FK_SAVED_STOCK_STOCK" msprop:Generator_RelationVarName="relationFK_SAVED_STOCK_STOCK" msprop:Generator_UserParentTable="STOCK" msprop:Generator_ParentPropName="STOCKRow" />
      <msdata:Relationship name="FK_SAVED_STOCK_USER" msdata:parent="USER" msdata:child="SAVED_STOCK" msdata:parentkey="id" msdata:childkey="User_id" msprop:Generator_UserChildTable="SAVED_STOCK" msprop:Generator_ChildPropName="GetSAVED_STOCKRows" msprop:Generator_UserRelationName="FK_SAVED_STOCK_USER" msprop:Generator_RelationVarName="relationFK_SAVED_STOCK_USER" msprop:Generator_UserParentTable="USER" msprop:Generator_ParentPropName="USERRow" />
      <msdata:Relationship name="FK_STOCK_PRICE_STOCK" msdata:parent="STOCK" msdata:child="STOCK_PRICE" msdata:parentkey="id" msdata:childkey="Stock_id" msprop:Generator_UserChildTable="STOCK_PRICE" msprop:Generator_ChildPropName="GetSTOCK_PRICERows" msprop:Generator_UserRelationName="FK_STOCK_PRICE_STOCK" msprop:Generator_ParentPropName="STOCKRow" msprop:Generator_RelationVarName="relationFK_STOCK_PRICE_STOCK" msprop:Generator_UserParentTable="STOCK" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>